* Based on Laurent Vogel's version, with the following changes
* * Introduced further use of symbols
* * Added a double buffer implementation to decrease IO waits
* * Added the last verse
* * Cleaned up code and added documentation
*
* rI1: field (1:1 to 5:5) for reading text constants into rX
* rI2: address of text constant being read
* rI3: field for writing characters to the output buffer
* rI4: word index of output buffer
* rI5: bottle counter
* rI6: buffer offset

	ORIG 100

NUMBTL	EQU  99
S 	EQU  22
PERIOD  EQU  40
COMMA	EQU  41
SLASH   CON  47
BUF     EQU  200
BUFSIZE EQU  25
BUFPOS  EQU  BUFSIZE-1
PRINTER EQU  18
FIELD   EQU  4:4
	
* Subroutines	
CRLF    STJ  XCRLF		Print current line, switch buffers, clear new buffer
	OUT  BUF,6(PRINTER)	Print active buffer
	ST4  BUF+BUFPOS,6	Save buffer index
	J6Z  1F			If buffer 1 active, jump...
	ENT6 0			...otherwise, activate it
	JMP  2F		
1H	ENT6 BUFSIZE		Activate buffer 2
2H	LD4  BUF+BUFPOS,6	Load saved buffer index of active buffer into r4...
	ENT3 0,4		...and copy it to r3 for clear word counting
	DEC3 0,6	        Take buffer offset off word counter
3H      STZ  BUF,4		Zero word at index
XCRLF   J3Z  *			Exit if first word cleared
        DEC3 1			Decrease r3 and r4
	DEC4 1
        JMP  3B			

PUTCH   STJ  XPUTCH		Output character stored in rX to buffer
        INC3 9			Move to next buffer character position
        CMP3 =5*9=		Jump if before or on last character in buffer word...
        JLE  1F			
        ENT3 9			...otherwise, move to first character...
        INC4 1			...of next buffer word
1H      ST3  *+1(FIELD)		Update next instruction with field (character position)
	STX  BUF,4		Write char in rX
XPUTCH  JMP  *

PUTS    STJ  XPUTS		Output text constant pointed to by rI2 to buffer
        ENT1 9			Start at first character of text constant word
        ENTX 0			
1H      ST1  *+1(FIELD)		Update next instruction with field (character position)
	LDX  0,2		Load character into rX
        CMPX SLASH		If character is / then we're done
XPUTS   JE   *		
        INC1 9			Move to next text constant character
        CMP1 =5*9=		Jump if before or on last character in word...
        JLE  2F			
        ENT1 9			...otherwise, move to first character...
        INC2 1			...of next text constant word
2H      JMP  PUTCH		Output character
        JMP  1B			Next character

PNUM    STJ  XPNUM		Output "nn/NO MORE BOTTLE(S) OF BEER"
        J5Z  2F			If no more bottles left, jump
        ENTA 0,5		Load number of bottles in rA and convert to text
        CHAR 
        CMP5 =10=		Jump if less than 10 bottles left...
        JL   1F			
        SRC  1			...otherwise, output first digit...
        JMP  PUTCH		
        SLC  1			...then move the last digit back into rX
1H      JMP  PUTCH		
        JMP  3F
2H      ENT2 NOMORE		Output "NO MORE"
        JMP  PUTS		
3H      ENT2 BOTTLE		Output " BOTTLE"
        JMP  PUTS		
        CMP5 =1=		Jump if we have one bottle left...
        JE   1F			
        ENTX S			...otherwise, output "S"	
        JMP  PUTCH		
1H      ENT2 OFBEER		Output " OF BEER"
        JMP  PUTS		
XPNUM   JMP  *

* Main program
START   ENT5 NUMBTL		Start with 99 bottles
        ENT4 0			Start at first character...
        ENT3 0			...of the first word of the buffer
	ENT6 0			Start at first buffer
LOOP    JMP  PNUM		Output bottles line segment
	ENT2 WALL		Output " ON THE WALL"
        JMP  PUTS
        ENTX COMMA		Output ","
        JMP  PUTCH		
        JMP  CRLF		Print buffer
        JMP  PNUM		Output bottles line segment
        ENTX PERIOD		Output "."
        JMP  PUTCH
        JMP  CRLF		Print buffer
        DEC5 1			Decrease bottle count
	J5N  1F
        ENT2 TAKE		Output "TAKE ONE DOWN, PASS IT AROUND,"
        JMP  PUTS
        JMP  CRLF		Print buffer
        JMP  PNUM		Output bottles line segment
	JMP  2F
1H	ENT2 GOBUY		Output "GO TO THE STORE, BY ONE MORE,"
	JMP  PUTS
        JMP  CRLF		Print buffer
	ENT5 NUMBTL		Reset bottle counter
        JMP  PNUM		Output bottles line segment
	ENT5 -1			Set bottle counter to -1 to signal end
2H	ENT2 WALL		Output " ON THE WALL"
        JMP  PUTS		
        ENTX PERIOD		Output "."
        JMP  PUTCH
        JMP  CRLF		Print buffer
        JMP  CRLF		Print buffer (empty line)
        J5NN LOOP		Next block, if we haven't finished
        HLT  

* Buffers
	ORIG BUF

	CON  0			Output buffer 1: make sure it's empty
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0			Buffer word index for buffer 1

	CON  0			Output buffer 2: make sure it's empty
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  0
	CON  BUFSIZE		Buffer word index for buffer 2
	
* Text constants
	
BOTTLE  ALF  " BOTT"
        ALF  "LE/  "
OFBEER  ALF  " OF B"
        ALF  "EER/ "
WALL    ALF  " ON T"
        ALF  "HE WA"
        ALF  "LL/  "
TAKE    ALF  "TAKE "
        ALF  "ONE D"
        ALF  "OWN, "
        ALF  "PASS "
        ALF  "IT AR"
        ALF  "OUND,"
	ALF  "/    "
NOMORE  ALF  "NO MO"
        ALF  "RE/  "
GOBUY   ALF  "GO TO"
        ALF  " THE "
	ALF  "STORE"
	ALF  ", BUY"
	ALF  " SOME"
	ALF  " MORE"
	ALF  ",/   "
  
        END  START