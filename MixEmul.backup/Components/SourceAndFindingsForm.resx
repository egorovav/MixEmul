<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mSaveExportFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXl5eAF9fXwBhYWEAZ2dnAGtrawBvb28AcXFxAHNzcwB0dHQAdnZ2AHh4eAB5eXkAenp6AHt7
        ewB8fHwAfX19AH5+fgB/f38AgICAAIKCggCDg4MAhYWFAIaGhgCIiIgAiYmJAIqKigCLi4sAjo6OAI+P
        jwCQkJAAkZGRAJKSkgCTk5MAlJSUAJaWlgCXl5cAmJiYAJmZmQCampoAm5ubAJycnACdnZ0Anp6eAJ+f
        nwCgoKAAoaGhAKKiogCjo6MApKSkAKWlpQCmpqYAqKioAKmpqQCqqqoAq6urAKysrACtra0Arq6uAK+v
        rwCwsLAAsbGxALKysgCzs7MAtLS0ALW1tQC2trYAt7e3ALi4uAC5ubkAurq6ALu7uwC8vLwAvb29AL6+
        vgC/v78AwMDAAMHBwQDCwsIAw8PDAMTExADFxcUAxsbGAMfHxwDIyMgAycnJAMrKygDLy8sAzMzMAM3N
        zQDOzs4Az8/PANDQ0ADR0dEA0tLSANPT0wDU1NQA1dXVANbW1gDX19cA2NjYANnZ2QDa2toA29vbANzc
        3ADd3d0A3t7eAN/f3wDg4OAA4eHhAOLi4gDj4+MA5OTkAOXl5QDm5uYA5+fnAOjo6ADp6ekA6urqAOvr
        6wDs7OwA7e3tAO7u7gDv7+8A8PDwAPHx8QDy8vIA8/PzAPT09AD19fUA9vb2APf39wD4+PgA+fn5APr6
        +gD7+/sA/Pz8AP39/QD+/v4A////AFxcXAAAAAUA5BeOABjukHzAQJF8/////7tAkXyO1gEARQAAACQV
        jgCAABDA5BeOABjukHxwBZF8/////wAAAAA9BJF8WBaOAF8JgXy3AAAAAQAAAAIAAADUF44AGAAAAAAA
        AABAFo4AQgAAAAAAAAAkFo4AAAAAAAAAAAAAAAAADAAAAAIAAAABAZB8APz9f4YAAAAAAAAAAwAAAI4A
        GgLoSQsAAAAAAOhJCwAFAAAAr+CAfHwWjgBPGoB81AAAAAAAAMAAAAAAAAAAAAIAAACAAAAAAAAAALwX
        jgA/ZUsAoBzsAAAAAMAAAAAAsBeOAAIAAACAAAAAAAAAALDvTwDk9agAAgAAAEM6XERvY3VtZW50cyBh
        bmQFAAAAdGluZ3NcUnV0Z2VyXE15IERvY3VtZW50c1xNeSBQaWN0dXJlc1xtaXgzMi4AAAAAmKXsACqI
        1Hf/6ZB89g2BfNQAAAAAAAAAAAAAAAAAAAA4F44AmKXsABYAAAAAAAAAFg6BfBYAAADUF44AAQAAACAA
        AAAWAAAAAAAAABYAAAAkF44AKojUd+QXjgComoN8IA6BfP////8WDoF81mVLANQAAACYpewAFgAAAIgX
        jgAAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAf39/f3+AgH+AgH+AgICAgICAgH9/f4CAgICAgH+Af36BgoSDf31/
        gIB/f35/f4B/f399f4GAfn9/gICAf36EhXlybnGBioB+f4KDhH9/f4B9gomDeX+FfX9/gH+AhWpQTFRM
        PDRHfYaAckNPgH9/fYp2RyobHFKLfn9+gYBTVXWCiIuFeUYdYoZHZQVugnyLRxsYL1diPEuEfoB/QWqK
        hYuIh4uGi24QT06GXnqDiyYTLkmKi4uLOVJ8iEFgi4WAMwsHIXOFi2IKIHWLi3kPGUA6i20iHG96Kohh
        NouEdhcyV1AIAXaEiyQYEykmAi1cFWR+I1E5Dn8vizFeioUhXouLi4sGGYuKUSB1MjNmgg47g11Ki3US
        bih3JXyLT0CLf3dziU6MfIhpDIWLi4skIFKKa0uLUFs0RFYnhIk2cIWJGl+LQgWFhG4Me3uGUx08aIOK
        SyxRMzqESiCGgjd9goolPWUETomHYR2IgYEOWzB/glFSV1lriX9dG4OIPHeEg4A/K1mKgIs4P4qLLDF6
        KIpVUIqHh4N9gIEacotSXIuChouLi4GHfRR2i18JhWogiTl4gIB8hYJ/iy5Mi301fIuCgYCBiYceT4uE
        DVuKahGKMWOCUnQ+eIKGah+Ih2w/coeKiYhvLEuJiy43iX16B3NmDxxRik0fhnyKP0WLgndOSU9MRz1q
        hotLJoqJhIoRLotrZoWAexZ6fn6GNFKLhIZ2bm15hoaJVTCFgDtYiisDfoqDe4pmGIR/foCDQ0J0hYqK
        i4qFek5Fg4kzI2GJOS00aIKEcxdYh3+Afn+HYEVPXWdnX1VOaYd+gxt9i4gyeHZITEkwWod9gIB/f36G
        hHRkXl1mdIOEfn2HTSFWQVeEgYd5doSHfX+AgICAgH5+goaGhoWCf3+Af36FYT9ihn5+foGCf36AgICA
        gICAgIB/f35+f3+AgIB/f36Gi4V+f3+Af39/gICAgICAgICAgICAgICAgICAgICAgH59foCAgICAgICA
        gICAgICAgICAgICAgICAgICAgH+AgH+AgIB/gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>