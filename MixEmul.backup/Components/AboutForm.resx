<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAACACoCAAAJgAAABAQAAAAAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAF5eXgBfX18AYWFhAGdnZwBra2sAb29vAHFxcQBzc3MAdHR0AHZ2
        dgB4eHgAeXl5AHp6egB7e3sAfHx8AH19fQB+fn4Af39/AICAgACCgoIAg4ODAIWFhQCGhoYAiIiIAImJ
        iQCKiooAi4uLAI6OjgCPj48AkJCQAJGRkQCSkpIAk5OTAJSUlACWlpYAl5eXAJiYmACZmZkAmpqaAJub
        mwCcnJwAnZ2dAJ6engCfn58AoKCgAKGhoQCioqIAo6OjAKSkpAClpaUApqamAKioqACpqakAqqqqAKur
        qwCsrKwAra2tAK6urgCvr68AsLCwALGxsQCysrIAs7OzALS0tAC1tbUAtra2ALe3twC4uLgAubm5ALq6
        ugC7u7sAvLy8AL29vQC+vr4Av7+/AMDAwADBwcEAwsLCAMPDwwDExMQAxcXFAMbGxgDHx8cAyMjIAMnJ
        yQDKysoAy8vLAMzMzADNzc0Azs7OAM/PzwDQ0NAA0dHRANLS0gDT09MA1NTUANXV1QDW1tYA19fXANjY
        2ADZ2dkA2traANvb2wDc3NwA3d3dAN7e3gDf398A4ODgAOHh4QDi4uIA4+PjAOTk5ADl5eUA5ubmAOfn
        5wDo6OgA6enpAOrq6gDr6+sA7OzsAO3t7QDu7u4A7+/vAPDw8ADx8fEA8vLyAPPz8wD09PQA9fX1APb2
        9gD39/cA+Pj4APn5+QD6+voA+/v7APz8/AD9/f0A/v7+AP///wBcXFwAAAAFAOQXjgAY7pAAwECRAP//
        /wC7QJEAjtYBAEUAAAAkFY4AgAAQAOQXjgAY7pAAcAWRAP///wAAAAAAPQSRAFgWjgBfCYEAtwAAAAEA
        AAACAAAA1BeOABgAAAAAAAAAQBaOAEIAAAAAAAAAJBaOAAAAAAAAAAAAAAAAAAwAAAACAAAAAQGQAAD8
        /QCGAAAAAAAAAAMAAACOABoA6EkLAAAAAADoSQsABQAAAK/ggAB8Fo4ATxqAANQAAAAAAAAAAAAAAAAA
        AAACAAAAgAAAAAAAAAC8F44AP2VLAKAc7AAAAAAAAAAAALAXjgACAAAAgAAAAAAAAACw708A5PWoAAIA
        AABDOlwAb2N1AGVudAAgYW4ABQAAAHRpbgBzXFIAdGdlAFxNeQBEb2MAbWVuAHNcTQAgUGkAdHVyAHNc
        bQB4MzIAAAAAAJil7AAqiNQA/+mQAPYNgQDUAAAAAAAAAAAAAAAAAAAAOBeOAJil7AAWAAAAAAAAABYO
        gQAWAAAA1BeOAAEAAAAgAAAAFgAAAAAAAAAWAAAAJBeOACqI1ADkF44AqJqDACAOgQD///8AFg6BANZl
        SwDUAAAAmKXsABYAAACIF44AAAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICIgICAgICAgICAgICAgICAgICAgICAgICAgICAiIh4cHBwgIiAgICAgIiAgICAgICI
        gHiAiICAgICAgIhoUFBYUEA4SICIgHBAUICAgICIeEgpGxtQiICAgICAUFh4gIiIiHhIG2CISGgFcICA
        iEgbGzFYYEBIiICAgEBoiIiIiIiIiIhwD1BQiGB4gIgpFTFIiIiIiDhQgIhAYIiIgDEPCSJwiIhgCSJ4
        iIh4DxtAOIhwIhtweCmIYDiIiHgVMVhQCYx4iIgiGxUpKYwxYBVogCJQOA+AMYgxYIiIImCIiIiIBRuI
        iFAieDExaIAPOIBgSIh4D3ApeCmAiFBAiIB4cIhQjICIaA+IiIiIIiJQiGhIiFBYOEhYKYiIOHCIiBtg
        iEAFiIhwD3h4iFAbQGiAiEgpUDE4iEgiiIA4gICIKUBoA1CIiGAbiICAD1gxgIBQUFhYaIiAYBuAiEB4
        iICAQClYiICIOECIiCkxeCmIWFCIiIiAgICAG3CIUGCIgIiIiIiAiIAVeIhgCYhoIog4eICAgIiAgIgx
        UIiAOICIgICAgIiIIlCIiA9YiGgPiDFggFB4QHiAiGgiiIhwQHCIiIiIcClIiIgxOIiAeAlwaA8bUIhQ
        IoiAiEBIiIB4UEhQUEhAaIiISCmIiIiIDzGIaGiIgHgVeICAiDhQiIiIeHBweIiIiFgxiIA4WIgpA4CI
        gHiIaBuIgICAgEBAeIiIiIiIiHhQSICIMSJgiDgxOGiAiHAVWIiAgICAiGBIUGBoaGBYUGiIgIAbgIiI
        MXh4SFBIMViIgICAgICAiIh4aGBgaHiAiICAiFAiWEBYiICIeHiIiICAgICAgICAgICIiIiIgICAgICA
        iGBAYIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiIiIgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAA
        AAAAAAAAAAEAAAABAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYABAQEAAgI
        CAAMDAwAERERABYWFgAcHBwAIiIiACkpKQBVVVUATU1NAEJCQgA5OTkAgHz/AFBQ/wCTANYA/+zMAMbW
        7wDW5+cAkKmtAAAAMwAAAGYAAACZAAAAzAAAMwAAADMzAAAzZgAAM5kAADPMAAAz/wAAZgAAAGYzAABm
        ZgAAZpkAAGbMAABm/wAAmQAAAJkzAACZZgAAmZkAAJnMAACZ/wAAzAAAAMwzAADMZgAAzJkAAMzMAADM
        /wAA/2YAAP+ZAAD/zAAzAAAAMwAzADMAZgAzAJkAMwDMADMA/wAzMwAAMzMzADMzZgAzM5kAMzPMADMz
        /wAzZgAAM2YzADNmZgAzZpkAM2bMADNm/wAzmQAAM5kzADOZZgAzmZkAM5nMADOZ/wAzzAAAM8wzADPM
        ZgAzzJkAM8zMADPM/wAz/zMAM/9mADP/mQAz/8wAM///AGYAAABmADMAZgBmAGYAmQBmAMwAZgD/AGYz
        AABmMzMAZjNmAGYzmQBmM8wAZjP/AGZmAABmZjMAZmZmAGZmmQBmZswAZpkAAGaZMwBmmWYAZpmZAGaZ
        zABmmf8AZswAAGbMMwBmzJkAZszMAGbM/wBm/wAAZv8zAGb/mQBm/8wAzAD/AP8AzACZmQAAmTOZAJkA
        mQCZAMwAmQAAAJkzMwCZAGYAmTPMAJkA/wCZZgAAmWYzAJkzZgCZZpkAmWbMAJkz/wCZmTMAmZlmAJmZ
        mQCZmcwAmZn/AJnMAACZzDMAZsxmAJnMmQCZzMwAmcz/AJn/AACZ/zMAmcxmAJn/mQCZ/8wAmf//AMwA
        AACZADMAzABmAMwAmQDMAMwAmTMAAMwzMwDMM2YAzDOZAMwzzADMM/8AzGYAAMxmMwCZZmYAzGaZAMxm
        zACZZv8AzJkAAMyZMwDMmWYAzJmZAMyZzADMmf8AzMwAAMzMMwDMzGYAzMyZAMzMzADMzP8AzP8AAMz/
        MwCZ/2YAzP+ZAMz/zADM//8AzAAzAP8AZgD/AJkAzDMAAP8zMwD/M2YA/zOZAP8zzAD/M/8A/2YAAP9m
        MwDMZmYA/2aZAP9mzADMZv8A/5kAAP+ZMwD/mWYA/5mZAP+ZzAD/mf8A/8wAAP/MMwD/zGYA/8yZAP/M
        zAD/zP8A//8zAMz/ZgD//5kA///MAGZm/wBm/2YAZv//AP9mZgD/Zv8A//9mACEApQBfX18Ad3d3AIaG
        hgCWlpYAy8vLALKysgDX19cA3d3dAOPj4wDq6uoA8fHxAPj4+ADw+/8ApKCgAICAgAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8A9PT09PT09PT09PT0///09PT09PT09PT09PT09P//9PT09PT09PT09PT0
        9PT09PT09PT/8/L09PT09PT0//P/9PT0vPT0BAQE8fL0B+y87///8P8EBAQEBAQE+O//7fKS9/8EBAT/
        ////BATv8P/4kpL/BAQEBP//BAQE8f+S9//sBAQEBAT//wQEBAQH//T09wQEBAQE//8EBAQE8Afv9P8E
        BAQE////BAQEBPH/8/P09AQEBAQEBAQEBPfx/+z/9PQEBAQE//8EBAT///P/9PT09AQEBP//BAT/9PT0
        9PT09PT09AQEBPT09PT09PT09PT09PT09PT09PT09PT09AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>